> Доклад должен определять место решаемой задачи в некоторой области, связь с известной проблемой, четко формулировать задачу работы, обосновывать ее актуальность, рассматривать уже использовавшиеся подходы к ее решению, описывать используемый студентом в работе подход и применяемые им техники, выделяя новые элементы, указывать особенности практической реализации этого подхода, полученные результаты и данные (результаты экспериментов и тестов), подтверждающие то, что поставленная задача решена, делать выводы о возможностях применения найденных решений и их эффективности с различных точек зрения.
>
> На все это отводится 15 минут.
>
> Предварительно презентация должна быть обсуждена и согласована с куратором.
> номера слайдов 


Данная работа является прикладным исследованием в пересечении областей смешанного целочисленного программирования (англ. mixed integer programming) и программирования в ограничениях (англ. constraint programming)

Цель работы - реализация алгоритма Branch-and-Cut с использованием подходов массивного параллелизма и возможностей Nvidia CUDA. 

Актуальность:

Задача существования целочисленного решения системы является NP-полной. Таким образом, для реальных задач необходимо проделывать очень большой объем вычислений, что не позволяет расширить довольно ограниченный круг задач, для решения которых используются методы целочисленного программирования.

Использование методов разрешения ограничений позволяет решать многие прикладные задачи, такие как планирование и теория расписаний, поддержка принятия решений, обработка изображений, тестирование интегральных схем, формальная верификация и статический анализ.

Нас интересует подраздел линейного программирования - целочисленное линейное программирование (англ. integer linear programming, ILP), в котором на все или некоторые (смешанное целочисленное программирование) переменные накладывается ограничение целочисленности.

GPU имеет тысячи более энергоэффективных ядер, созданных для выполнения нескольких задач одновременно. Представляется актуальным использовать возможности GPU для задачи разрешения ограничений
Технология GPGPU (general-purpose computing for graphics processing units) позволила увеличить на несколько порядков вычислительные возможности компьютеров, пропорционально уменьшив затраты на программное обеспечение. Она позволяет использовать ресурсы видеокарт для неграфических вычислений. Основным производителем видеокарт с аппаратной поддержкой GPGPU является NVIDIA с комплексом CUDA, которая обеспечила рост популярности GPGPU за счёт упрощения процесса создания программ, использующих возможности GPU
